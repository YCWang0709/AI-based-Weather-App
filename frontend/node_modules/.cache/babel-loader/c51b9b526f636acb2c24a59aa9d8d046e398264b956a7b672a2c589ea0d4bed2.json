{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\35326\\\\Desktop\\\\Weather\\\\frontend\\\\src\\\\components\\\\SearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = ({\n  setWeatherData\n}) => {\n  _s();\n  const [latitude, setLatitude] = useState(\"\");\n  const [longitude, setLongitude] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  // Validate latitude and longitude range\n  const isValidCoords = (lat, lon) => {\n    if (isNaN(lat) || isNaN(lon)) {\n      alert(\"Latitude and longitude must be numbers.\");\n      return false;\n    }\n    if (lat < -90 || lat > 90 || lon < -180 || lon > 180) {\n      alert(\"Latitude must be between -90 and 90, and longitude must be between -180 and 180.\");\n      return false;\n    }\n    return true;\n  };\n\n  // Fetch weather data by coordinates\n  const fetchWeatherByCoords = async (lat, lon) => {\n    if (!lat || !lon) {\n      alert(\"Please provide valid latitude and longitude!\");\n      return;\n    }\n\n    // Simulating user authentication (Replace this with actual user authentication logic)\n    const userId = localStorage.getItem(\"userId\") || \"default-user\";\n    if (!userId) {\n      alert(\"User not logged in. Please log in to fetch weather data.\");\n      return;\n    }\n    setLoading(true);\n    try {\n      console.log(\"Sending request to backend...\");\n      console.log(\"Request payload:\", {\n        lat,\n        lon,\n        userId\n      });\n      const response = await axios.post(\"http://localhost:5000/api/weather/get-weather\", {\n        lat: parseFloat(lat),\n        lon: parseFloat(lon),\n        userId,\n        lang: \"en\"\n      });\n      console.log(\"Response from backend:\", response.data);\n      if (!response.data.current_weather || !response.data.current_weather.temperature) {\n        console.error(\"API response missing 'current_weather.temperature' field!\");\n        alert(\"Weather data not available.\");\n        return;\n      }\n      setWeatherData(response.data);\n    } catch (error) {\n      console.error(\"Error fetching weather data:\", error.response ? error.response.data : error.message);\n      alert(\"Failed to fetch weather data.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Get user's current GPS location\n  const getLocationWeather = () => {\n    if (navigator.geolocation) {\n      setLoading(true);\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        console.log(\"GPS Location:\", latitude, longitude);\n        fetchWeatherByCoords(latitude, longitude);\n      }, error => {\n        console.error(\"Error getting location:\", error);\n        alert(\"Unable to retrieve your location. Please enter coordinates manually.\");\n        setLoading(false);\n      });\n    } else {\n      alert(\"Geolocation is not supported by your browser.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: latitude,\n      onChange: e => setLatitude(e.target.value),\n      placeholder: \"Enter latitude (e.g., 40.7128)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: longitude,\n      onChange: e => setLongitude(e.target.value),\n      placeholder: \"Enter longitude (e.g., -74.006)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => fetchWeatherByCoords(latitude, longitude),\n      children: \"Get Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getLocationWeather,\n      children: \"Get Current Location Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Fetching weather data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchBar, \"3wY/SPvqqG+zH4tBV3XJZS0bL+c=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","SearchBar","setWeatherData","_s","latitude","setLatitude","longitude","setLongitude","loading","setLoading","isValidCoords","lat","lon","isNaN","alert","fetchWeatherByCoords","userId","localStorage","getItem","console","log","response","post","parseFloat","lang","data","current_weather","temperature","error","message","getLocationWeather","navigator","geolocation","getCurrentPosition","position","coords","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/35326/Desktop/Weather/frontend/src/components/SearchBar.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst SearchBar = ({ setWeatherData }) => {\r\n    const [latitude, setLatitude] = useState(\"\");\r\n    const [longitude, setLongitude] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    // Validate latitude and longitude range\r\n    const isValidCoords = (lat, lon) => {\r\n        if (isNaN(lat) || isNaN(lon)) {\r\n            alert(\"Latitude and longitude must be numbers.\");\r\n            return false;\r\n        }\r\n        if (lat < -90 || lat > 90 || lon < -180 || lon > 180) {\r\n            alert(\"Latitude must be between -90 and 90, and longitude must be between -180 and 180.\");\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    // Fetch weather data by coordinates\r\n    const fetchWeatherByCoords = async (lat, lon) => {\r\n        if (!lat || !lon) {\r\n            alert(\"Please provide valid latitude and longitude!\");\r\n            return;\r\n        }\r\n\r\n        // Simulating user authentication (Replace this with actual user authentication logic)\r\n        const userId = localStorage.getItem(\"userId\") || \"default-user\";\r\n\r\n        if (!userId) {\r\n            alert(\"User not logged in. Please log in to fetch weather data.\");\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            console.log(\"Sending request to backend...\");\r\n            console.log(\"Request payload:\", { lat, lon, userId });\r\n\r\n            const response = await axios.post(\"http://localhost:5000/api/weather/get-weather\", {\r\n                lat: parseFloat(lat),\r\n                lon: parseFloat(lon),\r\n                userId,\r\n                lang: \"en\",\r\n            });\r\n\r\n            console.log(\"Response from backend:\", response.data);\r\n\r\n            if (!response.data.current_weather || !response.data.current_weather.temperature) {\r\n                console.error(\"API response missing 'current_weather.temperature' field!\");\r\n                alert(\"Weather data not available.\");\r\n                return;\r\n            }\r\n\r\n            setWeatherData(response.data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching weather data:\", error.response ? error.response.data : error.message);\r\n            alert(\"Failed to fetch weather data.\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // Get user's current GPS location\r\n    const getLocationWeather = () => {\r\n        if (navigator.geolocation) {\r\n            setLoading(true);\r\n            navigator.geolocation.getCurrentPosition(\r\n                (position) => {\r\n                    const { latitude, longitude } = position.coords;\r\n                    console.log(\"GPS Location:\", latitude, longitude);\r\n                    fetchWeatherByCoords(latitude, longitude);\r\n                },\r\n                (error) => {\r\n                    console.error(\"Error getting location:\", error);\r\n                    alert(\"Unable to retrieve your location. Please enter coordinates manually.\");\r\n                    setLoading(false);\r\n                }\r\n            );\r\n        } else {\r\n            alert(\"Geolocation is not supported by your browser.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type=\"text\"\r\n                value={latitude}\r\n                onChange={(e) => setLatitude(e.target.value)}\r\n                placeholder=\"Enter latitude (e.g., 40.7128)\"\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                value={longitude}\r\n                onChange={(e) => setLongitude(e.target.value)}\r\n                placeholder=\"Enter longitude (e.g., -74.006)\"\r\n            />\r\n            <button onClick={() => fetchWeatherByCoords(latitude, longitude)}>Get Weather</button>\r\n            <button onClick={getLocationWeather}>Get Current Location Weather</button>\r\n            {loading && <p>Fetching weather data...</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchBar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}