{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\35326\\\\Desktop\\\\Weather\\\\frontend\\\\src\\\\components\\\\SearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = ({\n  setWeatherData\n}) => {\n  _s();\n  const [latitude, setLatitude] = useState(\"\");\n  const [longitude, setLongitude] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  // 获取 GPS 定位\n  const getLocationWeather = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        fetchWeatherByCoords(latitude, longitude);\n      }, error => {\n        console.error(\"Error getting location\", error);\n        alert(\"无法获取您的位置，请手动输入经纬度。\");\n      });\n    } else {\n      alert(\"您的浏览器不支持 GPS 定位，请手动输入经纬度。\");\n    }\n  };\n\n  // 发送请求到后端\n  const fetchWeatherByCoords = async (lat, lon) => {\n    if (!lat || !lon) {\n      alert(\"请提供有效的经纬度！\");\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/weather/get-weather\", {\n        lat,\n        lon,\n        lang: \"zh_cn\" // 这里可以改成 \"en\" 或 \"zh_cn\"\n      });\n      setWeatherData(response.data);\n    } catch (error) {\n      console.error(\"Error fetching weather data\", error);\n      alert(\"无法获取天气信息，请稍后重试。\");\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: latitude,\n      onChange: e => setLatitude(e.target.value),\n      placeholder: \"\\u8F93\\u5165\\u7EAC\\u5EA6 (lat)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: longitude,\n      onChange: e => setLongitude(e.target.value),\n      placeholder: \"\\u8F93\\u5165\\u7ECF\\u5EA6 (lon)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => fetchWeatherByCoords(latitude, longitude),\n      children: \"\\u67E5\\u8BE2\\u5929\\u6C14\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getLocationWeather,\n      children: \"\\u83B7\\u53D6\\u5F53\\u524D\\u4F4D\\u7F6E\\u5929\\u6C14\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u6B63\\u5728\\u83B7\\u53D6\\u5929\\u6C14\\u6570\\u636E...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchBar, \"3wY/SPvqqG+zH4tBV3XJZS0bL+c=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","SearchBar","setWeatherData","_s","latitude","setLatitude","longitude","setLongitude","loading","setLoading","getLocationWeather","navigator","geolocation","getCurrentPosition","position","coords","fetchWeatherByCoords","error","console","alert","lat","lon","response","post","lang","data","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/35326/Desktop/Weather/frontend/src/components/SearchBar.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst SearchBar = ({ setWeatherData }) => {\r\n    const [latitude, setLatitude] = useState(\"\");\r\n    const [longitude, setLongitude] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    // 获取 GPS 定位\r\n    const getLocationWeather = () => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(\r\n                async (position) => {\r\n                    const { latitude, longitude } = position.coords;\r\n                    fetchWeatherByCoords(latitude, longitude);\r\n                },\r\n                (error) => {\r\n                    console.error(\"Error getting location\", error);\r\n                    alert(\"无法获取您的位置，请手动输入经纬度。\");\r\n                }\r\n            );\r\n        } else {\r\n            alert(\"您的浏览器不支持 GPS 定位，请手动输入经纬度。\");\r\n        }\r\n    };\r\n\r\n    // 发送请求到后端\r\n    const fetchWeatherByCoords = async (lat, lon) => {\r\n        if (!lat || !lon) {\r\n            alert(\"请提供有效的经纬度！\");\r\n            return;\r\n        }\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await axios.post(\"http://localhost:5000/api/weather/get-weather\", {\r\n                lat,\r\n                lon,\r\n                lang: \"zh_cn\", // 这里可以改成 \"en\" 或 \"zh_cn\"\r\n            });\r\n            setWeatherData(response.data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching weather data\", error);\r\n            alert(\"无法获取天气信息，请稍后重试。\");\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type=\"text\"\r\n                value={latitude}\r\n                onChange={(e) => setLatitude(e.target.value)}\r\n                placeholder=\"输入纬度 (lat)\"\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                value={longitude}\r\n                onChange={(e) => setLongitude(e.target.value)}\r\n                placeholder=\"输入经度 (lon)\"\r\n            />\r\n            <button onClick={() => fetchWeatherByCoords(latitude, longitude)}>查询天气</button>\r\n            <button onClick={getLocationWeather}>获取当前位置天气</button>\r\n            {loading && <p>正在获取天气数据...</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchBar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}