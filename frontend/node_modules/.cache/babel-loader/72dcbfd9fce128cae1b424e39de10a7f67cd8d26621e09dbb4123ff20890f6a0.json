{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\35326\\\\Desktop\\\\Weather\\\\frontend\\\\src\\\\components\\\\SearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = ({\n  setWeatherData,\n  setForecastData\n}) => {\n  _s();\n  const [location, setLocation] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  // 获取用户当前位置（GPS）\n  const getLocationWeather = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        fetchWeatherByCoords(latitude, longitude);\n      }, error => {\n        console.error(\"Error getting location\", error);\n        alert(\"无法获取您的位置，请手动输入地点。\");\n      });\n    } else {\n      alert(\"您的浏览器不支持 GPS 定位，请手动输入地点。\");\n    }\n  };\n\n  // 解析用户输入并获取地理坐标\n  const fetchLocationCoords = async query => {\n    try {\n      const geoResponse = await axios.get(`https://api.openweathermap.org/geo/1.0/direct?q=${encodeURIComponent(query)}&limit=1&appid=${process.env.REACT_APP_WEATHER_API_KEY}`);\n      if (geoResponse.data.length > 0) {\n        const {\n          lat,\n          lon\n        } = geoResponse.data[0];\n        fetchWeatherByCoords(lat, lon);\n      } else {\n        alert(\"未找到该地点，请尝试输入城市、邮政编码或更具体的位置。\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching location coordinates\", error);\n      alert(\"获取地理坐标失败，请稍后重试。\");\n    }\n  };\n\n  // 获取天气数据（当前 + 5 天预报）\n  const fetchWeatherByCoords = async (lat, lon) => {\n    setLoading(true);\n    try {\n      // 获取当前天气\n      const weatherResponse = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${process.env.REACT_APP_WEATHER_API_KEY}`);\n\n      // 获取 5 天天气预报\n      const forecastResponse = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&units=metric&appid=${process.env.REACT_APP_WEATHER_API_KEY}`);\n      setWeatherData(weatherResponse.data);\n      setForecastData(forecastResponse.data);\n    } catch (error) {\n      console.error(\"Error fetching weather data\", error);\n      alert(\"获取天气信息失败，请稍后重试。\");\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: location,\n      onChange: e => setLocation(e.target.value),\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u57CE\\u5E02\\u3001\\u90AE\\u653F\\u7F16\\u7801\\u3001\\u5730\\u6807\\u7B49\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => fetchLocationCoords(location),\n      children: \"\\u67E5\\u8BE2\\u5929\\u6C14\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getLocationWeather,\n      children: \"\\u83B7\\u53D6\\u5F53\\u524D\\u4F4D\\u7F6E\\u5929\\u6C14\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u6B63\\u5728\\u83B7\\u53D6\\u5929\\u6C14\\u6570\\u636E...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchBar, \"Jziz8oky4+J9M0eKwKcxOXbv+jo=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","SearchBar","setWeatherData","setForecastData","_s","location","setLocation","loading","setLoading","getLocationWeather","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","fetchWeatherByCoords","error","console","alert","fetchLocationCoords","query","geoResponse","get","encodeURIComponent","process","env","REACT_APP_WEATHER_API_KEY","data","length","lat","lon","weatherResponse","forecastResponse","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/35326/Desktop/Weather/frontend/src/components/SearchBar.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst SearchBar = ({ setWeatherData, setForecastData }) => {\r\n    const [location, setLocation] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    // 获取用户当前位置（GPS）\r\n    const getLocationWeather = () => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(\r\n                async (position) => {\r\n                    const { latitude, longitude } = position.coords;\r\n                    fetchWeatherByCoords(latitude, longitude);\r\n                },\r\n                (error) => {\r\n                    console.error(\"Error getting location\", error);\r\n                    alert(\"无法获取您的位置，请手动输入地点。\");\r\n                }\r\n            );\r\n        } else {\r\n            alert(\"您的浏览器不支持 GPS 定位，请手动输入地点。\");\r\n        }\r\n    };\r\n\r\n    // 解析用户输入并获取地理坐标\r\n    const fetchLocationCoords = async (query) => {\r\n        try {\r\n            const geoResponse = await axios.get(\r\n                `https://api.openweathermap.org/geo/1.0/direct?q=${encodeURIComponent(query)}&limit=1&appid=${process.env.REACT_APP_WEATHER_API_KEY}`\r\n            );\r\n            if (geoResponse.data.length > 0) {\r\n                const { lat, lon } = geoResponse.data[0];\r\n                fetchWeatherByCoords(lat, lon);\r\n            } else {\r\n                alert(\"未找到该地点，请尝试输入城市、邮政编码或更具体的位置。\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching location coordinates\", error);\r\n            alert(\"获取地理坐标失败，请稍后重试。\");\r\n        }\r\n    };\r\n\r\n    // 获取天气数据（当前 + 5 天预报）\r\n    const fetchWeatherByCoords = async (lat, lon) => {\r\n        setLoading(true);\r\n        try {\r\n            // 获取当前天气\r\n            const weatherResponse = await axios.get(\r\n                `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${process.env.REACT_APP_WEATHER_API_KEY}`\r\n            );\r\n\r\n            // 获取 5 天天气预报\r\n            const forecastResponse = await axios.get(\r\n                `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&units=metric&appid=${process.env.REACT_APP_WEATHER_API_KEY}`\r\n            );\r\n\r\n            setWeatherData(weatherResponse.data);\r\n            setForecastData(forecastResponse.data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching weather data\", error);\r\n            alert(\"获取天气信息失败，请稍后重试。\");\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type=\"text\"\r\n                value={location}\r\n                onChange={(e) => setLocation(e.target.value)}\r\n                placeholder=\"请输入城市、邮政编码、地标等\"\r\n            />\r\n            <button onClick={() => fetchLocationCoords(location)}>查询天气</button>\r\n            <button onClick={getLocationWeather}>获取当前位置天气</button>\r\n            {loading && <p>正在获取天气数据...</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchBar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}